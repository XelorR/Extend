;; What to remap, initial keyboard state definition
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

;; Colemak (default) implemented with simple alpha shuffle, requires national US (qwerty) layout to be enabled
(deflayer colemak
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    f    p    g    j    l    u    y    ;    [    ]    \
  @esc @a   @r   @s   @t   d    h    @n   @e   @i   @o   '    ret
  lsft z    x    c    v    b    k    m    ,    .    /    rsft
  lctl lmet lalt         @space_nav       ralt rmet rctl
)

;; Diktor implemented with simple key remap, requires national RU (–π—Ü—É–∫–µ–Ω) layout to be enabled
(deflayer diktor
  grv  @_1   @_2   3     @_4   @_5   @_6   @_7   @_8   9     0      @star  =     bspc
  tab  @_—Ü   @_—å   @_—è   @_,   @_.   @_–∑   @_–≤   @_–∫   @_–¥   @_—á    @_—à    @_—â    \
  @esc @_—É   @_–∏   @_–µ   @_–æ   @_–∞   @_–ª   @_–Ω   @_—Ç   @_—Å   @_—Ä    @_–π    ret
  lsft @_—Ñ   @_—ç   @_—Ö   @_—ã   @_—é   @_–±   @_–º   @_–ø   @_–≥   @_–∂    rsft
  lctl lmet lalt         @space_nav       ralt rmet rctl
)

;; Diktor implemented with unicode symbols, requires national US (qwerty) layout to be enabled
;; use with caution, prefer the previous one
(deflayer diktor_unicode
  grv  @1–™   @2–¨   @3‚Ññ   @4%   @5:   @6;   @7-   @8dq  9     0      @star  =     bspc
  tab  @—Ü–¶   @—å—ä   @—è–Ø   @,?   @.!   @–∑–ó   @–≤–í   @–∫–ö   @–¥–î   @—á–ß    @—à–®    @—â–©    \
  @esc @d—É–£  @d–∏–ò  @d–µ–ï  @d–æ–û  @–∞–ê   @–ª–õ   @d–Ω–ù  @d—Ç–¢  @d—Å–°  @d—Ä–†   @–π–ô    ret
  lsft @—Ñ–§   @—ç–≠   @—Ö–•   @—ã–´   @—é–Æ   @–±–ë   @–º–ú   @–ø–ü   @–≥–ì   @–∂–ñ    rsft
  lctl lmet lalt         @space_nav       ralt rmet rctl
)

;; standard modless qwerty
(deflayer gaming
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  @esc a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt            spc           ralt rmet rctl
)

;; Extend (navigation/edition/function) layer
(deflayer navigation
  ‚éã    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  _
  ‚Üπ    A-f4 C-S-‚Üπ ‚Üπ   C-‚Üπ @term ‚éÄ    ‚á§    ‚Üë    ‚á•    ‚å¶    @smq @rub _
  ‚éã    ‚Äπ‚åò   ‚Äπ‚å•   @‚éà   ‚Äπ‚áß   ‚éô    @cw  ‚Üê    ‚Üì    ‚Üí    ‚å´    @‚Äî   _
  ‚áß‚Ä∫   C-z  C-x  C-c  C-v C-S-z ‚å•‚Ä∫   ‚áû    ‚ò∞    ‚áü    ‚§∂    _
  ‚éà‚Ä∫   ‚åò‚Ä∫  ‚å•‚Ä∫              _              _    _    _
)

;; Note on switcher layer.
;;
;; My language binding for system layouts (feel free to select yours):
;; - Ctrl-6 = Colemak
;; - Ctrl-7 = Diktor
;; - Ctrl-8 = Qwerty (colemak and diktor_unicode layers depends on it)
;; - Ctrl-9 = –ô—Ü—É–∫–µ–Ω (diktor layer depends on it)
;;
;; It can be earily set up in KDE Plasma or Windows 11.
;; qwerty, colemak and –π—Ü—É–∫–µ–Ω should be available in almost any os.
;; Therefore, Diktor is only available in GNU Linux, but you can use –π—Ü—É–∫–µ–Ω with diktor layer.
;; and should be installed separately on other systems.

(deflayer switcher
 lrld XX    XX    XX    XX    XX    XX    XX    XX    XX    üîá    üîà‚àí   üîà+   XX
  XX  XX    XX    @cmk  @dktu XX    XX    XX    XX    XX    XX    XX    XX    XX
  XX  @cmk  @dkt  @cmk  @dkt @gam   XX    XX    XX    XX    XX    XX    XX
  XX  XX    XX    XX    XX    XX    XX    XX    XX    XX    XX    XX
  XX  XX    XX                XX          XX    XX    XX
)

;; Variables and other settings
(defvar
  tap-time 200
  hold-time 150

  hold-index 150
  hold-middle 150
  hold-ring 160
  hold-pinky 195
)

(defalias
  ;; navigation "Extend" layer
  space_nav (tap-hold 200 200 spc (layer-toggle navigation))

  ;; layer to switch layouts
  esc (tap-hold 200 200 esc (layer-toggle switcher))

  ;; layouts
  cmk (multi (layer-switch colemak) C-8)
  dkt (multi (layer-switch diktor) C-9)
  dktu (multi (layer-switch diktor_unicode) C-8)
  gam (layer-switch gaming)

  term (macro C-8 50 lmet 250 S-t e r m i n a l 350 ret 50 C-6)
  ‚Äî (unicode ‚Äî)
  smq (macro C-8 50 ralt 50 S-, S-, 50 ralt 50 S-. S-. left 50 C-6)
  rub (macro C-8 50 ralt 50 = p 50 C-6)
  cw (caps-word 2000)

  ‚éà (one-shot 500 lctl)

  ;; colemak modtaps
  a (tap-hold $tap-time $hold-pinky a lmet)
  r (tap-hold $tap-time $hold-ring r lalt)
  s (tap-hold $tap-time $hold-middle s lctl)
  t (tap-hold $tap-time $hold-index t lsft)
  n (tap-hold $tap-time $hold-index n rsft)
  e (tap-hold $tap-time $hold-middle e rctl)
  i (tap-hold $tap-time $hold-ring i ralt)
  o (tap-hold $tap-time $hold-pinky o rmet)

;; Diktor symbols
;; 1234567890*=
;; –™–¨‚Ññ%:;-"()_+
  _1 (fork 1 S-] (lsft rsft))
  _2 (fork 2 S-m (lsft rsft))
  ;; 3 is the same in –π—Ü—É–∫–µ–Ω
  _4 (fork 4 S-5 (lsft rsft))
  _5 (fork 5 S-6 (lsft rsft))
  _6 (fork 6 S-4 (lsft rsft))
  _7 (fork 7 (unmod -) (lsft rsft))
  _8 (fork 8 S-2 (lsft rsft))
  _—Ü (fork w C-q (lctl rctl))
  _—å (fork m (unmod ]) (lsft rsft))
  _—è (fork z C-f (lctl rctl))
  _, (fork S-/ S-7 (lsft rsft))
  _. (fork / S-1 (lsft rsft))
  _–∑ (fork p C-j (lctl rctl))
  _–≤ (fork d C-l (lctl rctl))
  _–∫ (fork r C-u (lctl rctl))
  _–¥ (fork l C-y (lctl rctl))
  _—á (fork x C-; (lctl rctl))
  _—à (fork i C-[ (lctl rctl))
  _—â (fork o C-] (lctl rctl))
  _—É (tap-hold $tap-time $hold-pinky (fork e C-a (lctl rctl)) lmet)
  _–∏ (tap-hold $tap-time $hold-ring (fork b C-r (lctl rctl)) lalt)
  _–µ (tap-hold $tap-time $hold-middle (fork t C-s (lctl rctl)) lctl)
  _–æ (tap-hold $tap-time $hold-index (fork j C-t (lctl rctl)) lsft)
  _–∞ (fork f C-d (lctl rctl))
  _–ª (fork k C-h (lctl rctl))
  _–Ω (tap-hold $tap-time $hold-index (fork y C-n (lctl rctl)) rsft)
  _—Ç (tap-hold $tap-time $hold-middle (fork n C-e (lctl rctl)) rctl)
  _—Å (tap-hold $tap-time $hold-ring (fork c C-i (lctl rctl)) ralt)
  _—Ä (tap-hold $tap-time $hold-pinky (fork h C-o (lctl rctl)) rmet)
  _–π (fork q C-' (lctl rctl))
  _—Ñ (fork a C-z (lctl rctl))
  _—ç (fork ' C-x (lctl rctl))
  _—Ö (fork [ C-c (lctl rctl))
  _—ã (fork s C-v (lctl rctl))
  _—é (fork . C-b (lctl rctl))
  _–± (fork , C-k (lctl rctl))
  _–º (fork v C-m (lctl rctl))
  _–ø (fork g C-, (lctl rctl))
  _–≥ (fork u C-. (lctl rctl))
  _–∂ (fork ; C-/ (lctl rctl))

  ;; diktor_unicode modetaps are below, in context with unicode definitions

  ;; Unicode symbols for Diktor layout
  ;; Row 1
  –™ (unicode –™)
  1–™ (fork 1 @–™ (lsft rsft))

  –¨ (unicode –¨)
  2–¨ (fork 2 @–¨ (lsft rsft))

  ‚Ññ (unicode ‚Ññ)
  3‚Ññ (fork 3 @‚Ññ (lsft rsft))

  4% (fork 4 S-5 (lsft rsft))

  5: (fork 5 S-; (lsft rsft))

  6; (fork 6 ; (lsft rsft))

  7- (fork 7 (unmod -) (lsft rsft))

  8dq (fork 8 S-' (lsft rsft))

  star (fork S-8 S-- (lsft rsft))

  ;; Row 2
  —Ü (unicode —Ü)
  –¶ (unicode –¶)
  —Ü–¶ (fork @—Ü @–¶ (lsft rsft))

  —å (unicode —å)
  —ä (unicode —ä)
  —å—ä (fork @—å @—ä (lsft rsft))

  —è (unicode —è)
  –Ø (unicode –Ø)
  —è–Ø (fork @—è @–Ø (lsft rsft))

  , (unicode ,)
  ? (unicode ?)
  ,? (fork @, @? (lsft rsft))

  . (unicode .)
  ! (unicode !)
  .! (fork @. @! (lsft rsft))

  –∑ (unicode –∑)
  –ó (unicode –ó)
  –∑–ó (fork @–∑ @–ó (lsft rsft))

  –≤ (unicode –≤)
  –í (unicode –í)
  –≤–í (fork @–≤ @–í (lsft rsft))

  –∫ (unicode –∫)
  –ö (unicode –ö)
  –∫–ö (fork @–∫ @–ö (lsft rsft))

  –¥ (unicode –¥)
  –î (unicode –î)
  –¥–î (fork @–¥ @–î (lsft rsft))

  —á (unicode —á)
  –ß (unicode –ß)
  —á–ß (fork @—á @–ß (lsft rsft))

  —à (unicode —à)
  –® (unicode –®)
  —à–® (fork @—à @–® (lsft rsft))

  —â (unicode —â)
  –© (unicode –©)
  —â–© (fork @—â @–© (lsft rsft))

  ;; Row 3
  —É (unicode —É)
  –£ (unicode –£)
  —É–£ (fork @—É @–£ (lsft rsft))
  d—É–£ (tap-hold $tap-time $hold-pinky @—É–£ lmet)

  –∏ (unicode –∏)
  –ò (unicode –ò)
  –∏–ò (fork @–∏ @–ò (lsft rsft))
  d–∏–ò (tap-hold $tap-time $hold-ring @–∏–ò lalt)

  –µ (unicode –µ)
  –ï (unicode –ï)
  –µ–ï (fork @–µ @–ï (lsft rsft))
  d–µ–ï (tap-hold $tap-time $hold-middle @–µ–ï lctl)

  –æ (unicode –æ)
  –û (unicode –û)
  –æ–û (fork @–æ @–û (lsft rsft))
  d–æ–û (tap-hold $tap-time $hold-index @–æ–û lsft)

  –∞ (unicode –∞)
  –ê (unicode –ê)
  –∞–ê (fork @–∞ @–ê (lsft rsft))

  –ª (unicode –ª)
  –õ (unicode –õ)
  –ª–õ (fork @–ª @–õ (lsft rsft))

  –Ω (unicode –Ω)
  –ù (unicode –ù)
  –Ω–ù (fork @–Ω @–ù (lsft rsft))
  d–Ω–ù (tap-hold $tap-time $hold-index @–Ω–ù lsft)

  —Ç (unicode —Ç)
  –¢ (unicode –¢)
  —Ç–¢ (fork @—Ç @–¢ (lsft rsft))
  d—Ç–¢ (tap-hold $tap-time $hold-middle @—Ç–¢ lctl)

  —Å (unicode —Å)
  –° (unicode –°)
  —Å–° (fork @—Å @–° (lsft rsft))
  d—Å–° (tap-hold $tap-time $hold-ring @—Å–° lalt)

  —Ä (unicode —Ä)
  –† (unicode –†)
  —Ä–† (fork @—Ä @–† (lsft rsft))
  d—Ä–† (tap-hold $tap-time $hold-pinky @—Ä–† lmet)

  –π (unicode –π)
  –ô (unicode –ô)
  –π–ô (fork @–π @–ô (lsft rsft))

  ;; Row 4
  —Ñ (unicode —Ñ)
  –§ (unicode –§)
  —Ñ–§ (fork @—Ñ @–§ (lsft rsft))

  —ç (unicode —ç)
  –≠ (unicode –≠)
  —ç–≠ (fork @—ç @–≠ (lsft rsft))

  —Ö (unicode —Ö)
  –• (unicode –•)
  —Ö–• (fork @—Ö @–• (lsft rsft))

  —ã (unicode —ã)
  –´ (unicode –´)
  —ã–´ (fork @—ã @–´ (lsft rsft))

  —é (unicode —é)
  –Æ (unicode –Æ)
  —é–Æ (fork @—é @–Æ (lsft rsft))

  –± (unicode –±)
  –ë (unicode –ë)
  –±–ë (fork @–± @–ë (lsft rsft))

  –º (unicode –º)
  –ú (unicode –ú)
  –º–ú (fork @–º @–ú (lsft rsft))

  –ø (unicode –ø)
  –ü (unicode –ü)
  –ø–ü (fork @–ø @–ü (lsft rsft))

  –≥ (unicode –≥)
  –ì (unicode –ì)
  –≥–ì (fork @–≥ @–ì (lsft rsft))

  –∂ (unicode –∂)
  –ñ (unicode –ñ)
  –∂–ñ (fork @–∂ @–ñ (lsft rsft))
)
