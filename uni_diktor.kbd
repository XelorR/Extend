;; -------------------------------------------------------------------------------------
;; backup, unicode typing for Russian language

(deflayer rus ;; diktor
 _         _    _    _    _    _                f6   f7   f8   f9    f10    f11   f12  _
 @_ё       @_1  @_2  @_3  @_4  @_5              @_6  @_7  @_8   9    0     @_star _    _

 _         @_ц  @_ь  @_я  @_,? @_.!             @_з  @_в  @_к  @_д  @_ч     @_ш  @_щ   \
@lfun      @_hу @_hи @_hе @_hо @_а              @_л  @_hн @_hт @_hс @_hр    @_й
 _         @_lф @_э  @_х  @_ы  @_ю              @_lб @_м  @_п  @_г  @_lж     rsft
 _                       @lfun @nav @mos   @sym @num @rfun

                         @lfun                       @rfun
                         @lfun                  @num @rfun
)

(defalias
  ;; -------------------------------------------------------------------------------------
  ;; Russian letters, implemented as unicode symbols

  ;; rus
  Ъ (unicode Ъ)
  _1 (fork 1 @Ъ (lsft rsft))
  Ь (unicode Ь)
  _2 (fork 2 @Ь (lsft rsft))
  u№ (unicode №)
  _3 (fork 3 @u№ (lsft rsft))
  _4 (fork 4 S-5 (lsft rsft))
  _5 (fork 5 S-; (lsft rsft))
  _6 (fork 6 ; (lsft rsft))
  _7 (fork 7 (unmod -) (lsft rsft))
  _8 (fork 8 S-' (lsft rsft))
  _star (fork S-8 S-- (lsft rsft)) ;; diktor
  uц (unicode ц)
  uЦ (unicode Ц)
  _ц (fork @uц @uЦ (lsft rsft))
  uь (unicode ь)
  uъ (unicode ъ)
  uЪ (unicode Ъ)
  _ь (fork @uь @uъ (lsft rsft))
  _ъ (fork @uъ @uЪ (lsft rsft))
  uя (unicode я)
  uЯ (unicode Я)
  _я (fork @uя @uЯ (lsft rsft))
  u, (unicode ,)
  u? (unicode ?)
  _,? (fork @u, @u? (lsft rsft))
  u. (unicode .)
  u! (unicode !)
  _.! (fork @u. @u! (lsft rsft))
  uз (unicode з)
  uЗ (unicode З)
  _з (fork @uз @uЗ (lsft rsft))
  uв (unicode в)
  uВ (unicode В)
  _в (fork @uв @uВ (lsft rsft))
  uк (unicode к)
  uК (unicode К)
  _к (fork @uк @uК (lsft rsft))
  uд (unicode д)
  uД (unicode Д)
  _д (fork @uд @uД (lsft rsft))
  uч (unicode ч)
  uЧ (unicode Ч)
  _ч (fork @uч @uЧ (lsft rsft))
  uш (unicode ш)
  uШ (unicode Ш)
  _ш (fork @uш @uШ (lsft rsft))
  uщ (unicode щ)
  uЩ (unicode Щ)
  _щ (fork @uщ @uЩ (lsft rsft))
  uу (unicode у)
  uУ (unicode У)
  _у (fork @uу @uУ (lsft rsft))
  uи (unicode и)
  uИ (unicode И)
  _и (fork @uи @uИ (lsft rsft))
  uе (unicode е)
  uЕ (unicode Е)
  _е (fork @uе @uЕ (lsft rsft))
  uо (unicode о)
  uО (unicode О)
  _о (fork @uо @uО (lsft rsft))
  uа (unicode а)
  uА (unicode А)
  _а (fork @uа @uА (lsft rsft))
  uл (unicode л)
  uЛ (unicode Л)
  _л (fork @uл @uЛ (lsft rsft))
  uн (unicode н)
  uН (unicode Н)
  _н (fork @uн @uН (lsft rsft))
  uт (unicode т)
  uТ (unicode Т)
  _т (fork @uт @uТ (lsft rsft))
  uс (unicode с)
  uС (unicode С)
  _с (fork @uс @uС (lsft rsft))
  uр (unicode р)
  uР (unicode Р)
  _р (fork @uр @uР (lsft rsft))
  uй (unicode й)
  uЙ (unicode Й)
  _й (fork @uй @uЙ (lsft rsft))
  uф (unicode ф)
  uФ (unicode Ф)
  _ф (fork @uф @uФ (lsft rsft))
  uэ (unicode э)
  uЭ (unicode Э)
  _э (fork @uэ @uЭ (lsft rsft))
  uх (unicode х)
  uХ (unicode Х)
  _х (fork @uх @uХ (lsft rsft))
  uы (unicode ы)
  uЫ (unicode Ы)
  _ы (fork @uы @uЫ (lsft rsft))
  uю (unicode ю)
  uЮ (unicode Ю)
  _ю (fork @uю @uЮ (lsft rsft))
  uб (unicode б)
  uБ (unicode Б)
  _б (fork @uб @uБ (lsft rsft))
  uм (unicode м)
  uМ (unicode М)
  _м (fork @uм @uМ (lsft rsft))
  uп (unicode п)
  uП (unicode П)
  _п (fork @uп @uП (lsft rsft))
  uг (unicode г)
  uГ (unicode Г)
  _г (fork @uг @uГ (lsft rsft))
  uж (unicode ж)
  uЖ (unicode Ж)
  _ж (fork @uж @uЖ (lsft rsft))
  uё (unicode ё)
  uЁ (unicode Ё)
  _ё (fork @uё @uЁ (lsft rsft))
  _lж (tap-hold $tap-time $hold-pinky @_ж (layer-toggle fun))
  _lб (tap-hold $tap-time $hold-pinky @_б (layer-toggle swi))

  ;; extra letters which doesn't fit 10 columns
  rus[ @_ш
  rus] @_щ
  rus` @_ё
  rus' @_й
)

(platform (win winiov2 wintercept linux)
  (defalias
    ;; modtaps (GACS)
    _lф (tap-hold $tap-time $hold-pinky @_ф (layer-toggle mos))
    ;; rus ;; diktor
    _hу (tap-hold $tap-time $hold-pinky @_у (multi lmet (layer-while-held eng)))
    _hи (tap-hold $tap-time $hold-ring @_и (multi lalt (layer-while-held eng)))
    _hе (tap-hold $tap-time $hold-middle @_е (multi lctl (layer-while-held eng)))
    _hо (tap-hold $tap-time $hold-index @_о lsft)
    _hн (tap-hold $tap-time $hold-index @_н lsft)
    _hт (tap-hold $tap-time $hold-middle @_т (multi lctl (layer-while-held eng)))
    _hс (tap-hold $tap-time $hold-ring @_с (multi lalt (layer-while-held eng)))
    _hр (tap-hold $tap-time $hold-pinky @_р (multi lmet (layer-while-held eng)))
  )
)

(platform (macos)
  (defalias
    ;; modtaps (GCAS)
    _lф (tap-hold $tap-time $hold-pinky @_ф (layer-toggle mos_mac))
    ;; rus ;; diktor
    _hу (tap-hold $tap-time $hold-pinky @_у (multi lctl (layer-while-held eng)))
    _hи (tap-hold $tap-time $hold-ring @_и (multi lalt (layer-while-held eng)))
    _hе (tap-hold $tap-time $hold-middle @_е (multi lmet (layer-while-held eng)))
    _hо (tap-hold $tap-time $hold-index @_о lsft)
    _hн (tap-hold $tap-time $hold-index @_н lsft)
    _hт (tap-hold $tap-time $hold-middle @_т (multi lmet (layer-while-held eng)))
    _hс (tap-hold $tap-time $hold-ring @_с (multi lalt (layer-while-held eng)))
    _hр (tap-hold $tap-time $hold-pinky @_р (multi lctl (layer-while-held eng)))
  )
)
