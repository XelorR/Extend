;; MATRIX ==============================================================================
;; what to remap

(defsrc
 f24       f1   f2   f3   f4   f5               f6   f7   f8   f9   f10      f11  f12  del
 grv       1    2    3    4    5                6    7    8    9    0        -    =    bspc

 tab       q    w    e    r    t                y    u    i    o    p        [    ]    \
 caps      a    s    d    f    g                h    j    k    l    ;        '
 lsft      z    x    c    v    b                n    m    ,    .    /
 lctl                     esc  spc  f22    f23  ret  rsft

                                                     menu
                          lalt                       rctl
                          lmet                  ralt rmet
)

;; BUTTON DEFINITIONS ==================================================================

(include control.kbd)

(defalias
  ;; -------------------------------------------------------------------------------------
  ;; layouts switching

  eng (multi (layer-switch eng) @en)
  rus (multi (layer-switch rus) @ru)
  gam (multi (layer-switch gam) @en)
  qwe (multi (layer-switch qwe) @en)

  ;; -------------------------------------------------------------------------------------
  ;; Symbols definition

  ;; sym
  ;; to use this symbols, you have to ensure:
  ;; - that you have US (qwerty) and RU (йцукен) layouts set in the system
  ;; - set separate activation shortcuts for @en and @ru - just look at the definitions
  % S-5
  + S-=
  * S-8
  _ S--
  lb S-9
  rb S-0
  { (switch ((base-layer rus)) (macro @en 50 S-[ 50 @ru) break () S-[ break )
  ; (switch ((base-layer rus)) S-4 break () ; break )
  } (switch ((base-layer rus)) (macro @en 50 S-] 50 @ru) break () S-] break )
  ! S-1
  # (switch ((base-layer rus)) (macro @en 50 S-3 50 @ru) break () S-3 break)
  $ (switch ((base-layer rus)) (macro @en 50 S-4 50 @ru) break () S-4 break)
  & (switch ((base-layer rus)) (macro @en 50 S-7 50 @ru) break () S-7 break)
  ' (switch ((base-layer rus)) (macro @en 50 ' 50 @ru) break () ' break)
  < (switch ((base-layer rus)) (macro @en 50 S-, 50 @ru) break () S-, break)
  > (switch ((base-layer rus)) (macro @en 50 S-. 50 @ru) break () S-. break)
  [ (switch ((base-layer rus)) (macro @en 50 [ 50 @ru) break () [ break)
  ] (switch ((base-layer rus)) (macro @en 50 ] 50 @ru) break () ] break)
  ^ (switch ((base-layer rus)) (macro @en 50 S-6 50 @ru) break () S-6 break)
  ` (switch ((base-layer rus)) (macro @en 50 grv 50 @ru) break () grv break)
  at (switch ((base-layer rus)) (macro @en 50 S-2 50 @ru) break () S-2 break)
  “ (switch ((base-layer rus)) S-2 break () S-' break)
  : (switch ((base-layer rus)) S-6 break () S-; break)
  | (switch ((base-layer rus)) (macro @en 50 S-\ 50 @ru) break () S-\ break)
  ~ (switch ((base-layer rus)) (macro @en 50 S-grv 50 @ru) break () S-grv break)
  , (switch ((base-layer rus)) S-/ break () , break )
  . (switch ((base-layer rus)) / break () . break )
  ? (switch ((base-layer rus)) S-7 break () S-/ break )
  / (switch ((base-layer rus)) S-\ break () / break )
  № (switch ((base-layer rus)) S-3 break () (macro @ru 50 S-3 50 @en) break)
  ,? (switch ((base-layer rus)) (fork S-/ S-7 (lsft rsft)) break () (fork , S-/ (lsft rsft)) break )
  .! (switch ((base-layer rus)) (fork / S-1 (lsft rsft)) break () (fork . S-1 (lsft rsft)) break )
  ., (switch ((base-layer rus)) (fork / S-/ (lsft rsft)) break () (fork . , (lsft rsft)) break )
  “” (switch ((base-layer rus)) (macro S-2 20 S-2 20 left) break () (macro S-' 20 S-'' 29 left) break )
  '' (switch ((base-layer rus)) (macro @en 50 ' 20 ' 20 left  50 @ru) break () (macro ' 20 ' 20 left) break )
  td“” (switch ((base-layer rus)) (tap-dance-eager 400 ( (macro S-2) (macro bspc S-2 S-2 left) (macro S-2 S-2 left) (macro S-2 S-2 left))) break () (tap-dance-eager 300 ( (macro S-') (macro bspc S-' S-' left) (macro S-' S-' left) (macro S-' S-' left))) break )
  td'' (switch ((base-layer rus)) (tap-dance-eager 400 ( (macro @en 50 ' 50 @ru) (macro @en 50 ' 30 @ru 20 left) (macro @en 50 ' ' 30 @ru 20 left) (macro @en 50 ' ' 30 @ru 20 left))) break () (tap-dance-eager 300 ( (macro ') (macro ' left) (macro ' ' left) (macro ' ' left))) break )
  brc (macro S-9 20 S-0 20 left)
  []  (switch ((base-layer rus)) (macro @en 50 [ 20 ] 20 left 50 @ru) break () (macro [ 20 ] 20 left) break )
  {}  (switch ((base-layer rus)) (macro @en 50 S-[ 20 S-] 20 left 50 @ru) break () (macro S-[ 20 S-] 20 left) break )
  <>  (switch ((base-layer rus)) (macro @en 50 S-, 20 S-. 20 left 50 @ru) break () (macro S-, 20 S-. 20 left) break )
  -[] (switch ((base-layer rus)) (macro @en 50 home - [ 20 spc ] spc 20 end 50 @ru) break () (macro home - [ 20 spc ] 20 spc end) break )

  ;; -------------------------------------------------------------------------------------
  ;; Unicode symbols

  u— (unicode —)
  ur— (macro @en 50 @u— 50 @ru)
  — (switch ((base-layer rus)) @ur— break () @u— break )
  u₽ (unicode ₽)
  ur₽ (macro @en 50 @u₽ 50 @ru)
  ₽ (switch ((base-layer rus)) @ur₽ break () @u₽ break )
  u° (unicode °)
  ur° (macro @en 50 @u° 50 @ru)
  ° (switch ((base-layer rus)) @ur° break () @u° break )
  u≈ (unicode ≈)
  ur≈ (macro @en 50 @u≈ 50 @ru)
  ≈ (switch ((base-layer rus)) @ur≈ break () @u≈ break )
  u± (unicode ±)
  ur± (macro @en 50 @u± 50 @ru)
  ± (switch ((base-layer rus)) @ur± break () @u± break )
  u« (unicode «)
  u» (unicode »)
  u«» (macro @u« 50 @u» 50 left)
  ur«» (macro @en 50 @u« 50 @u» 50 left 50 @ru)
  u“ (unicode “)
  u” (unicode ”)
  u“” (macro @u“ 50 @u” 50 left)
  ur“” (macro @en 50 @u“ 50 @u” 50 left 50 @ru)
  «” (switch ((base-layer rus)) @ur«» break () @u“” break )
  
  ;; -------------------------------------------------------------------------------------
  ;; fun
  dr0 (dynamic-macro-record 0)
  dms dynamic-macro-record-stop
  dp0 (dynamic-macro-play 0)

  ;; -------------------------------------------------------------------------------------
  ;; navigation and edition specific

  ;; nav
  lctl (switch ((base-layer rus)) lctl break () (one-shot 500 lctl) break )
  lmet (switch ((base-layer rus)) lmet break () (one-shot 500 lmet) break )

  ;; mos
  mu (movemouse-up 1 1)
  md (movemouse-down 1 1)
  ml (movemouse-left 1 1)
  mr (movemouse-right 1 1)
  mwu (mwheel-up 50 120)
  mwd (mwheel-down 50 120)
  mwl (mwheel-left 50 120)
  mwr (mwheel-right 50 120)
  
  ;; -------------------------------------------------------------------------------------
  ;; custom shifted things

  gesc (fork esc (unmod grv) (lsft rsft))
  croll (fork caps (unmod slck) (lsft rsft))
  qdel (fork del @close_window (lsft rsft))
  qbspc (fork bspc @close_window (lsft rsft))

  ;; -------------------------------------------------------------------------------------
  ;; switchers to sublayers

  lsym (tap-hold $tap-time $hold-time spc (layer-toggle sym))
  rsym (tap-hold $tap-time $hold-time ret (layer-toggle sym))
  sym (tap-hold $tap-time $hold-time S-tab (layer-toggle sym))
  num (tap-hold $tap-time $hold-time ret (layer-toggle num))
  mos (tap-hold $tap-time $hold-time tab (layer-toggle mos))
  lau (layer-while-held lau)
  fun (layer-while-held fun)
  lfun (tap-hold $tap-time $hold-time esc (layer-toggle fun))
  rfun (tap-hold $tap-time $hold-time @cw (layer-toggle fun))
  ln (tap-hold $tap-time $hold-pinky n (layer-toggle swi))
)

;; -------------------------------------------------------------------------------------
;; home row mods, settings

(defvar
  tap-time 200
  hold-time 200

  hold-index 150
  hold-middle 150
  hold-ring 170
  hold-pinky 195
)

;; -------------------------------------------------------------------------------------
;; home row mods, GNU Linux and Windows version

(platform (win winiov2 wintercept linux)
  (defalias
    nav (tap-hold $tap-time $hold-time spc (layer-toggle nav))
    mopt @lctl
    ocm lalt
    ;; modtaps (GACS)
    ;; num
    h: (tap-hold $tap-time $hold-ring @: rmet)
    h4 (tap-hold $tap-time $hold-ring 4 lalt)
    h5 (tap-hold $tap-time $hold-middle 5 lctl)
    h6 (tap-hold $tap-time $hold-pinky 6 lsft)
    hn- (tap-hold $tap-time $hold-index - rsft)
    h= (tap-hold $tap-time $hold-pinky = lalt)
    hbspc (tap-hold $tap-time $hold-pinky bspc lmet)
    ;; sym
    h\ (tap-hold $tap-time $hold-pinky \ lmet)
    hlb (tap-hold $tap-time $hold-ring @lb lalt)
    h- (tap-hold $tap-time $hold-middle - lctl)
    hrb (tap-hold $tap-time $hold-index @rb lsft)
    h{ (tap-hold $tap-time $hold-index @{ lsft)
    h; (tap-hold $tap-time $hold-middle @; lctl)
    h} (tap-hold $tap-time $hold-ring @} lalt)
    h! (tap-hold $tap-time $hold-pinky @! lmet)
    ;; fun
    f11 (tap-hold $tap-time $hold-pinky f11 lmet)
    f4 (tap-hold $tap-time $hold-ring f4 lalt)
    f5 (tap-hold $tap-time $hold-middle f5 lctl)
    f6 (tap-hold $tap-time $hold-index f6 lsft)
    kp4 (tap-hold $tap-time $hold-index 4 lsft)
    kp5 (tap-hold $tap-time $hold-middle 5 lctl)
    kp6 (tap-hold $tap-time $hold-ring 6 lalt)
  )
)

;; -------------------------------------------------------------------------------------
;; home row mods, MacOS version

(platform (macos)
  (defalias
    nav (tap-hold $tap-time $hold-time spc (layer-toggle nav_mac))
    mopt (tap-hold $tap-time $hold-middle @lmet lalt)
    ocm (tap-hold $tap-time $hold-pinky lalt lmet)
    ;; modtaps (GCAS)
    ;; num
    h: (tap-hold $tap-time $hold-ring @: rctl)
    h4 (tap-hold $tap-time $hold-ring 4 lalt)
    h5 (tap-hold $tap-time $hold-middle 5 lmet)
    h6 (tap-hold $tap-time $hold-pinky 6 lsft)
    hn- (tap-hold $tap-time $hold-index - rsft)
    h= (tap-hold $tap-time $hold-pinky = lalt)
    hbspc (tap-hold $tap-time $hold-pinky bspc lctl)
    ;; sym
    h\ (tap-hold $tap-time $hold-pinky \ lctl)
    hlb (tap-hold $tap-time $hold-ring @lb lalt)
    h- (tap-hold $tap-time $hold-middle - lmet)
    hrb (tap-hold $tap-time $hold-index @rb lsft)
    h{ (tap-hold $tap-time $hold-index @{ lsft)
    h; (tap-hold $tap-time $hold-middle @; lmet)
    h} (tap-hold $tap-time $hold-ring @} lalt)
    h! (tap-hold $tap-time $hold-pinky @! lctl)
    ;; fun
    f11 (tap-hold $tap-time $hold-pinky f11 lctl)
    f4 (tap-hold $tap-time $hold-ring f4 lalt)
    f5 (tap-hold $tap-time $hold-middle f5 lmet)
    f6 (tap-hold $tap-time $hold-index f6 lsft)
    kp4 (tap-hold $tap-time $hold-index 4 lsft)
    kp5 (tap-hold $tap-time $hold-middle 5 lmet)
    kp6 (tap-hold $tap-time $hold-ring 6 lalt)
  )
)

;; LAYERS ==============================================================================
;; -------------------------------------------------------------------------------------
;; main typing layers

(include eng_colemak.kbd)
;; (include eng_qwerty.kbd)

(include rus_diktor.kbd)
;; (include uni_diktor.kbd) ;; backup version in unicode symbols
;; (include rus_йцукенг.kbd)

;; -------------------------------------------------------------------------------------
;; disable remapping - activate it when your frend is using your keyboard
;;   move it up to first defined layer if you want to keep config
;;   on your grandmother's laptop

(deflayer qwe ;; no remapping
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _
 _         _    _    _    _    _               @ln   _    _    _    _ 
 _                        _    _    _      _    _    _

                                                     _
                          _                          _     
                          _                     _    _
)

;; -------------------------------------------------------------------------------------
;; gaming layer and sublayers

(deflayer gam ;; gaming layer
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
@gesc      1    2    3    4    5                _    _    _    _    _        _    _    _

 i         tab  q    w    e    r                y    XX   up   XX   tab      _    _    _
 caps      lsft a    s    d    f                h    left down rght rsft     _
 m         lctl z    x    c    v               @ln   XX   XX   XX   rctl
 _                       @galt spc  _      _    ret @gprnt

                                                    @gprnt
                         @galt                      @gprnt
                         @galt                  ret @gprnt
)

(deflayer gfn ;; fn for gaming layer
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _        grv   2    esc  3    t                y    u    i    o    p        [    ]    _
 _       @fun   j    i    m    g                h    j    k    l    ;        '
 _        caps  1    h    4    b                n    m    ,    .    / 
 _                        XX   ret  _      _    _    _

                                                     _
                          XX                         _
                          XX                    _    _
)

;; -------------------------------------------------------------------------------------
;; layers with extra buttons: numeric, symbol, function

(deflayer num ;; numeric and punctuation layer
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _        @«”   7    8    9   @₽               @lrd @—   @°   @≈   @del      _    _    _
 _        @h:  @h4  @h5  @h6  @+               @%   @hn- @h;  @h=  @hbspc    _
 _         0    1    2    3   @$               @at  @|   @,?  @.!  @kill
 _                      @lfun @lsym _      _   @num @rfun

                                                    @rfun
                        @lfun                       @rfun
                        @lfun                  @num @rfun
)

(deflayer sym ;; symbol layer
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _        @“   @<    =   @>   @`               @^   @[   @_   @]   @'        _    _    _
 _        @h\  @hlb @h-  @hrb @+               @%   @h{  @h;  @h}  @h!       _
 _        @#   @*   @:   @/   @$               @at  @|   @~   @&   @?        
 _                      @lfun @nav  _      _   @num @rfun

                                                    @rfun
                        @lfun                       @rfun
                        @lfun                  @num @rfun
)

(deflayer fun ;; function, media and keypad layer
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _         f12  f7   f8   f9  volu             @dr0  kp7  kp8  kp9 @del      _    _    _
 _        @f11 @f4  @f5  @f6  vold             @dms @kp4 @kp5 @kp6 @hbspc    _
 _         f10  f1   f2   f3  mute             @dp0  kp1  kp2  kp3 @croll
 _                       nlck @lau  _      _    kp0  nlck

                                                     nlck
                         nlck                        nlck
                         nlck                   kp0  nlck
)

;; ------------------------------------------------------------------------------------------
;; layers for navigation, edition and function

(deflayer nav ;; navigation layer
 _         _    _     _    _     _                _    _    _    _    _         _    _    _
 f13       f1   f2    f3   f3    f5               f6   f7   f8   f9   f10       f11  f12  del

 _       @qdel @tlft  tab @trgt @lnch             ins  home up   end  del       _    _    _
 _         lmet lalt @lctl lsft @prnt            @mcon left down rght bspc      _
 _         C-z  C-x   C-c  C-v  @redo             mltp pgup menu pgdn @file 
 _                        @lau  @nav  _      _   @rsym @rfun

                                                       @rfun
                          @lau                         @rfun
                          @lau                   @rsym @rfun
)

(deflayer nav_mac ;; navigation layer
 _         _    _     _    _     _                _    _    _    _    _         _    _    _
 f13       f1   f2    f3   f3    f5               f6   f7   f8   f9   f10       f11  f12  del

 _       @qbspc @tlft tab @trgt @lnch             ins @home up  @end @del       _    _    _
 _         lctl @ocm @mopt lsft @prnt            @mcon left down rght bspc      _
 _         M-z  M-x   M-c  M-v  @redo             mltp pgup menu pgdn @file 
 _                        @lau  @nav  _      _   @rsym @rfun

                                                       @rfun
                          @lau                         @rfun
                          @lau                   @rsym @rfun
)

(deflayer mos ;; mouse layer
 _         _    _       _    _      _           _    _    _    _    _        _    _    _
 _         _    _       _    _      _           _    _    _    _    _        _    _    _

 _         del @tlft  tab @trgt @lnch           _   @mwl @mu  @mwr @mwu      _    _    _
 _         lmet lalt @lctl lsft @prnt           _   @ml  @md  @mr  @mwd      _
 _         C-z  C-x   C-c  C-v  @redo           _    mltp mrtp mmtp @file
 _                        @lfun @nav  _    _    mltp mrtp

                                                     mrtp
                          @lfun                      mrtp
                          @lfun                 mltp mrtp
)

(deflayer mos_mac ;; mouse layer
 _         _    _       _    _      _           _    _    _    _    _        _    _    _
 _         _    _       _    _      _           _    _    _    _    _        _    _    _

 _         bspc @tlft tab @trgt @lnch           _   @mwl @mu  @mwr @mwu      _    _    _
 _         lctl @ocm @mopt lsft @prnt           _   @ml  @md  @mr  @mwd      _
 _         M-z  M-x   M-c  M-v  @redo           _    mltp mrtp mmtp @file
 _                        @lfun @nav  _    _    mltp mrtp

                                                     mrtp
                          @lfun                      mrtp
                          @lfun                 mltp mrtp
)

;; -------------------------------------------------------------------------------------
;; layer to switch betwen typing and gaming layers and toggle mods if any

(deflayer swi ;; switcher, layer to switch layers
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    @gam @qwe _                _  @qwe @gam   _    _        _
 _         _    _    @rus @eng _                _  @eng @rus   _    _ 
 _                        _    _    _      _    _    _

                                                     _
                          _                          _     
                          _                     _    _
)

;; -------------------------------------------------------------------------------------
;; layer with macro to launch applications

(deflayer lau ;; app launcher
 _         _    _    _    _    _                _    _    _    _    _        _    _    _
 _         _    _    _    _    _                _    _    _    _    _        _    _    _

 _         _    _    _    _   @gho              _   @lua  _    _    _        _    _    _
 _         _    _   @ste @ter  _                _   @ntp @exc  _    _        _
 _        @zed  _    _   @vsc @bro              _    _    _    _    _
 _                        _    _    _      _    _    _

                                                     _
                          _                          _     
                          _                     _    _
)

;; -------------------------------------------------------------------------------------
;; combo definition

(defcfg concurrent-tap-hold yes)
(defchordsv2
  (e r) @eng $hold-time all-released    (        gam gfn num sym fun nav mos qwe)
  (w e) @rus $hold-time all-released    (        gam gfn num sym fun nav mos qwe)
  (x c) @_   $hold-time all-released    (        gam gfn num sym fun nav mos qwe)
  (c v) -    $hold-time all-released    (        gam gfn num sym fun nav mos qwe)
  (, .) @;   $hold-time all-released    (        gam gfn num sym fun nav mos qwe)
  (m ,) @:   $hold-time all-released    (        gam gfn num sym fun nav mos qwe)
  (s f) @brc $hold-time all-released    (eng rus gam gfn         fun nav mos qwe)
  (u o) @[]  $hold-time all-released    (eng rus gam gfn         fun nav mos qwe)
  (j l) @{}  $hold-time all-released    (eng rus gam gfn         fun nav mos qwe)
  (w r) @<>  $hold-time all-released    (eng rus gam gfn         fun nav mos qwe)
  (m .) @-[] $hold-time all-released    (eng rus gam gfn         fun nav mos qwe)
  (i o) @й   $hold-time all-released    (eng     gam gfn num sym fun nav mos qwe) ;; rus diktor
  (u i) @ё   $hold-time all-released    (eng     gam gfn num sym fun nav mos qwe) ;; rus diktor
  (i k) @ш   $hold-time all-released    (eng     gam gfn num sym fun nav mos qwe) ;; rus diktor
  (o l) @щ   $hold-time all-released    (eng     gam gfn num sym fun nav mos qwe) ;; rus diktor
  ;; (i o) @х  $hold-time all-released     (eng     gam gfn num sym fun nav mos qwe) ;; rus йцукенг
  ;; (u i) @ё  $hold-time all-released     (eng     gam gfn num sym fun nav mos qwe) ;; rus йцукенг
  ;; (o l) @э  $hold-time all-released     (eng     gam gfn num sym fun nav mos qwe) ;; rus йцукенг
)
