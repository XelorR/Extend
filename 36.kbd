(defsrc
  q    w    e    r    t                y    u    i    o    p
  a    s    d    f    g                h    j    k    l    ;
  z    x    c    v    b                n    m    ,    .    /
                 lalt spc lgui    ralt rgui menu
                                       rctl left
)

(deflayer eng
  q    w    f    p    g                j    l    u    y    '
 @a   @r   @s   @t    d                h   @n   @e   @i   @o
 @z    x    c    v    b                k    m    ,    .   @_/
               @cesc @nav @mos   @sym @num @fun
                                      @num @fun
)

(deflayer rus
 @ц   @ь   @я   @,?  @.!              @з   @в   @к   @д   @ч
 @у   @и   @е   @о   @а               @л   @н   @т   @с   @р
 @ф   @э   @х   @ы   @ю               @б   @м   @п   @г   @ж
               @cesc @nav @mos   @sym @num @fun
                                      @num @fun
)

(deflayer rus_u
  _    _    _    _    _                _    _    _    _    _
  _    _    _    _    _                _    _    _    _    _
  _    _    _    _    _                _    _    _    _    _
               @cesc @nav @mos @sym_r @num @fun
                                      @num @fun
)

(deflayer gam
  tab  q    w    e    r                y    u    i    o    p
  lsft a    s    d    f                h    j    k    l    ;
  lctl z    x    c    v                n    m    ,    .    /
                 lalt spc @gfn    prnt [    ]
                                       [    ]
)

(deflayer gfn
  esc  7    8    9    t                tab  home up   end  del
  caps 4    5    6    g                lsft left down rght bspc
  0    1    2    3    b                lctl pgdn menu pgup ret
                 ret  _   _       _    _    _
                                       _    _
)

(deflayer num
  grv  7    8    9    S-8              _    _    _    _    del
 @:   @4   @5   @6    =                _   @s-  @c,  @a.  @bspc
  0    1    2    3   @/                _    _    _    _    ret
               @cesc @nav 0       _    _    _
                                       _    _
)

(deflayer sym
  S-'  S-,  =    S-.  grv              S-6  [    S--  ]    '
 @\   @lb  @-   @rb   S-=              S-5 @{   @;   @]   @!
  S-3  S-8  S-;  /    S-4              S-2  S-\  S-`  S-7  S-/
               @cesc @nav @mos    ret @num @fun
                                      @num @fun
)

(deflayer sym_r
  S-2 @<    =   @>   @`               @^   @[    S-- @]   @'
 @\   @lb  @-   @rb   S-=              S-5 @{   @;   @]   @!
 @#    S-8  S-6  S-\ @$               @at  @|   @~   @&    S-7
               @cesc @nav @mos    ret @num @fun
                                      @num @fun
)

(deflayer fun
  f12  f7   f8   f9   volu            slck  kp7  kp8  kp9  del
 @f11 @f4  @f5  @f6   vold            caps @kp4 @kp5 @kp6 @bspc
  f10  f1   f2   f3   mute             kp0  kp1  kp2  kp3  ret
                nlck @nav @mos   kprt @num  _
                                      @num  _
)

(deflayer nav
  del  C-S-tab tab  C-tab @ter             ins  home up   end  del
  lmet lalt   @lctl lsft  prnt            @cw   left down rght bspc
  C-z  C-x     C-c  C-v   @vsc             mltp pgdn menu pgup ret
                    esc   spc tab     mrtp mltp _
                                           _    _
)

(deflayer mos
  del  C-S-tab tab  C-tab @ter         _   @mwl @mu  @mwr @mwu
  lmet lalt   @lctl lsft  prnt         _   @ml  @md  @mr  @mwd
  C-z  C-x     C-c  C-v   @vsc         _    mltp mrtp mmtp ret
                    esc   spc tab mrtp mltp mmtp
                                       mltp mmtp
)

(defvar
  tap-time 200
  hold-time 200

  hold-index 150
  hold-middle 150
  hold-ring 170
  hold-pinky 195
)

(defchordsv2
  (w e) @eng $hold-time all-released   (               gam gfn num sym fun nav mos)
  (i o) @rus $hold-time all-released   (                   gfn num sym fun nav mos)
  (, .) @rus_u $hold-time all-released (                   gfn num sym fun nav mos)
  (. /) @й $hold-time all-released     (eng      rus_u gam gfn num sym fun nav mos)
  (z x) grv $hold-time all-released    (eng      rus_u gam gfn num sym fun nav mos)
  (x c) @gam $hold-time all-released   (               gam gfn num sym fun nav mos)
)

(defalias
  ;; system combinations to switch languages
  en C-8
  ru C-9

  ;; layers
  nav (tap-hold $tap-time $hold-time spc (layer-toggle nav))
  mos (tap-hold $tap-time $hold-time tab (layer-toggle mos))
  cesc (tap-hold $tap-time $hold-time esc lctl)
  gfn (tap-hold $tap-time $hold-time i (layer-toggle gfn))
  sym (tap-hold $tap-time $hold-time ret (layer-toggle sym))
  sym_r (tap-hold $tap-time $hold-time ret (layer-toggle sym_r))
  z (tap-hold $tap-time $hold-pinky z (layer-toggle mos))
  _/ (tap-hold $tap-time $hold-pinky / (layer-toggle fun))

  ;; eng
  a (tap-hold $tap-time $hold-pinky a lmet)
  r (tap-hold $tap-time $hold-ring r lalt)
  s (tap-hold $tap-time $hold-middle s lctl)
  t (tap-hold $tap-time $hold-index t lsft)
  n (tap-hold $tap-time $hold-index n lsft)
  e (tap-hold $tap-time $hold-middle e lctl)
  i (tap-hold $tap-time $hold-ring i lalt)
  o (tap-hold $tap-time $hold-pinky o lmet)

  ;; nav
  cw (caps-word 2000)
  lctl (one-shot 500 lctl)
  term (macro lmet 300 S-t e r m i n a l 400 ret)
  terr (macro @en 50 lmet 300 S-t e r m i n a l 400 ret 50 @ru)
  vscode (macro lmet 300 S-v i s u a l 50 spc S-s t u d i o 50 spc S-c o d e 400 ret)
  vscodr (macro @en 50 lmet 300 S-v i s u a l 50 spc S-s t u d i o 50 spc S-c o d e 400 ret 50 @ru)
  vsc (switch
    ((base-layer rus)) @vscodr break
    () @vscode break
  )
  ter (switch
    ((base-layer rus)) @terr break
    () @term break
  )

  ;; mouse
  mu (movemouse-up 1 1)
  md (movemouse-down 1 1)
  ml (movemouse-left 1 1)
  mr (movemouse-right 1 1)
  mwu (mwheel-up 50 120)
  mwd (mwheel-down 50 120)
  mwl (mwheel-left 50 120)
  mwr (mwheel-right 50 120)
  
  ;; rus
  ц w
  ь (fork m (unmod ]) (lsft rsft))
  я z
  ,? (fork S-/ S-7 (lsft rsft))
  .! (fork / S-1 (lsft rsft))
  з p
  в d
  к r
  д l
  ч x
  ш i
  щ o
  у (tap-hold $tap-time $hold-pinky e (multi lmet (layer-while-held eng)))
  и (tap-hold $tap-time $hold-ring b (multi lalt (layer-while-held eng)))
  е (tap-hold $tap-time $hold-middle t (multi lctl (layer-while-held eng)))
  о (tap-hold $tap-time $hold-index j lsft)
  а f
  л k
  н (tap-hold $tap-time $hold-index y rsft)
  т (tap-hold-except-keys $tap-time $hold-middle n (multi lctl (layer-while-held eng)) (w))
  с (tap-hold $tap-time $hold-ring c (multi lalt (layer-while-held eng)))
  р (tap-hold $tap-time $hold-pinky h (multi lmet (layer-while-held eng)))
  й q
  ф (tap-hold $tap-time $hold-pinky a (layer-toggle mos))
  э '
  х [
  ы s
  ю .
  б ,
  м v
  п g
  г u
  ж (tap-hold $tap-time $hold-pinky ; (layer-toggle fun))

  ;; sym
  \ (tap-hold $tap-time $hold-pinky \ lmet)
  lb (tap-hold $tap-time $hold-ring S-9 lalt)
  - (tap-hold $tap-time $hold-middle - lctl)
  rb (tap-hold $tap-time $hold-index S-0 lsft)
  { (tap-hold $tap-time $hold-index (switch ((base-layer rus)) (macro @en 50 S-[ 50 @ru) break () S-[ break ) lsft)
  ; (tap-hold $tap-time $hold-middle (switch ((base-layer rus)) S-4 break () ; break ) lctl)
  } (tap-hold $tap-time $hold-ring (switch ((base-layer rus)) (macro @en 50 S-] 50 @ru) break () S-] break ) lalt)
  ! (tap-hold $tap-time $hold-pinky S-1 lmet)
  # (macro @en 50 S-3 50 @ru)
  $ (macro @en 50 S-4 50 @ru)
  & (macro @en 50 S-7 50 @ru)
  ' (macro @en 50 ' 50 @ru)
  < (macro @en 50 S-, 50 @ru)
  > (macro @en 50 S-. 50 @ru)
  [ (macro @en 50 [ 50 @ru)
  ] (macro @en 50 ] 50 @ru)
  ^ (macro @en 50 S-6 50 @ru)
  ` (macro @en 50 grv 50 @ru)
  at (macro @en 50 S-2 50 @ru)
  | (macro @en 50 S-\ 50 @ru)
  ~ (macro @en 50 S-grv 50 @ru)

  ;; num
  : (tap-hold $tap-time $hold-pinky (switch ((base-layer rus)) (macro @en 50 S-6 50 @ru) break () S-; break ) lmet)
  4 (tap-hold $tap-time $hold-ring 4 lalt)
  5 (tap-hold $tap-time $hold-middle 5 lctl)
  6 (tap-hold $tap-time $hold-pinky 6 lsft)
  s- (tap-hold $tap-time $hold-index - rsft)
  c, (tap-hold $tap-time $hold-middle @, rctl)
  a. (tap-hold $tap-time $hold-ring @. ralt)
  / (switch ((base-layer rus)) S-\ break () / break )

  ;; fun
  kp4 (tap-hold $tap-time $hold-index 4 lsft)
  kp5 (tap-hold $tap-time $hold-middle 5 lctl)
  kp6 (tap-hold $tap-time $hold-ring 6 lalt)
  f4 (tap-hold $tap-time $hold-ring f4 lalt)
  f5 (tap-hold $tap-time $hold-middle f5 lctl)
  f6 (tap-hold $tap-time $hold-index f6 lsft)
  f11 (tap-hold $tap-time $hold-pinky f11 lmet)
  bspc (tap-hold $tap-time $hold-pinky bspc lmet)
)
